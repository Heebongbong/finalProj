<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<!-- namespace 명은 패키지를 포함한 DAO 인터페이스, mapper를 구분하는 식별자로 사용 -->
<mapper namespace="boardDAO">
	<select id="board_list" resultType="boardDTO">
		select * from 
		(select * from community  where cm_no not in (select cm_no from market))a 
		join (select c.user_no, c.email, c.type, d.nickname, d.profile 
			from user c join user_profile d on c.user_no = d.user_no where type != 'D') b 
		on a.user_no = b.user_no order by cm_no desc Limit 5
	</select>
	<select id="board_list_search" resultType="boardDTO" parameterType="String">
		select * from 
		(select * from community  where cm_no not in (select cm_no from market))a 
		join (select c.user_no, c.email, c.type, d.nickname, d.profile 
			from user c join user_profile d on c.user_no = d.user_no where type != 'D') b 
		on a.user_no = b.user_no where hashtag like concat('%',#{keyword},'%') 
		or a.content like concat('%',#{keyword},'%') 
		or b.nickname like concat('%',#{keyword},'%') order by cm_no desc Limit 5
	</select>
	
	<select id="board_list_add" resultType="boardDTO" parameterType="int">
		<![CDATA[
			select * from 
		(select * from community  where cm_no not in (select cm_no from market))a 
			join (select c.user_no, c.email, c.type, d.nickname, d.profile 
				from user c join user_profile d on c.user_no = d.user_no where type != 'D') b 
			on a.user_no = b.user_no  where cm_no < #{cm_no} order by cm_no desc Limit 5
		]]>
	</select>
	
	<select id="board_list_add_search" resultType="boardDTO" parameterType="map">
		<![CDATA[
			select * from 
		(select * from community  where cm_no not in (select cm_no from market))a 
			join (select c.user_no, c.email, c.type, d.nickname, d.profile 
				from user c join user_profile d on c.user_no = d.user_no where type != 'D') b 
			on a.user_no = b.user_no 
			 where cm_no < #{cm_no} 
			 and hashtag like concat('%',#{keyword},'%') 
		or a.content like concat('%',#{keyword},'%') 
		or b.nickname like concat('%',#{keyword},'%') order by cm_no desc Limit 5
		]]>
	</select>
	
	<select id="board_list_hash_list" parameterType="list" resultType="boardDTO">
		<![CDATA[
			select * from 
		(select * from community  where cm_no not in (select cm_no from market))a 
			join (select c.user_no, c.email, c.type, d.nickname, d.profile 
				from user c join user_profile d on c.user_no = d.user_no where type != 'D') b 
			on a.user_no = b.user_no where 
		]]>(
			 <foreach collection="list" item="item" separator="and">
			 	hashtag like concat('%',#{item},'%') 
			 </foreach>
		)
		or a.content like concat('%',#{keyword},'%') 
		or b.nickname like concat('%',#{keyword},'%')  order by cm_no desc Limit 5
	</select>
	
	<select id="board_list_hash_map" parameterType="map" resultType="boardDTO">
		<![CDATA[
			select * from 
		(select * from community  where cm_no not in (select cm_no from market))a 
			join (select c.user_no, c.email, c.type, d.nickname, d.profile 
				from user c join user_profile d on c.user_no = d.user_no where type != 'D') b 
			on a.user_no = b.user_no 
			 where cm_no < #{cm_no} 
		]]>(
			 <foreach collection="hashList" item="item">
			 	and hashtag like concat('%',#{item},'%') 
			 </foreach>
			 )
		or a.content like concat('%',#{keyword},'%') 
		or b.nickname like concat('%',#{keyword},'%') 
		 order by cm_no desc Limit 5
	</select>
	
	<insert id="board_insert" parameterType="boardDTO">
		<selectKey keyProperty="cm_no" resultType="int" order="BEFORE">
			select max(cm_no) from community
		</selectKey>
        insert into community (cm_no, user_no, hashtag, content, date, photo_folder)
        values (#{cm_no} +1, #{user_no}, #{hashtag}, #{content}, now(), #{photo_folder})
    </insert>
  	<insert id="declaration_insert" parameterType="map">
  		insert into accuse values(#{cm_no}, #{user_no}, #{reason})
  	</insert>
  	
  	<select id="declaration_content" resultType="int" parameterType="map">
  		select count(*) from accuse where cm_no = #{cm_no} and user_no = #{user_no}
   	</select>
   	
   	<delete id="board_delete" parameterType="int">
   		delete from community where cm_no = #{cm_no}
   	</delete>
   	<delete id="board_accuser_delete" parameterType="int">
   		delete from accuse where cm_no = #{cm_no}
   	</delete>
   	<delete id="board_alarm_delete" parameterType="int">
   		delete from alarm where cm_no = #{cm_no}
   	</delete>
   	<delete id="board_mention_delete" parameterType="int">
   		delete from mention where cm_no = #{cm_no}
   	</delete>
   	<delete id="board_recommand_delete" parameterType="int">
   		delete from recommand where cm_no = #{cm_no}
   	</delete>
   	<delete id="board_market_delete" parameterType="int">
   		delete from market where cm_no = #{cm_no}
   	</delete>
    
    <select id="board_cont" resultType="boardDTO" parameterType="int">
    	select * from community where cm_no = #{cm_no}
    </select>
    
    <update id="board_update" parameterType="boardDTO">
    	update community set hashtag = #{hashtag}, content = #{content},
    	update = now(), photo_folder = #{phto_folder}
		where cm_no = #{cm_no}    
	</update>
  
</mapper>